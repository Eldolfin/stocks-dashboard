name: Tests
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  tests-backend:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - uses: taiki-e/install-action@just
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "0.8.13"
    - name: Setup environement
      run: cp .env.example .env
    - name: Run tests
      run: |
        echo "REPORT_FILE=backend/${REPORT_OUTPUT}" >> "$GITHUB_ENV"
        just backend ci ${REPORT_OUTPUT}
    - name: Show logs on failure
      if: failure()
      run: docker compose -f dev/docker-compose.yml logs
    - name: Output reports to the job summary when tests fail
      if: failure()
      shell: bash
      run: |
        if [ -f "$REPORT_FILE" ]; then
          echo "<details><summary>Failed Test Report</summary>" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          cat "$REPORT_FILE" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "</details>" >> $GITHUB_STEP_SUMMARY
        fi
  tests-end2end:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - uses: taiki-e/install-action@just
    - name: Setup environement
      run: |
        cp .env.example .env
        echo "CI=1" >> .env
    - name: Run Playwright tests
      run: just tests ci
    - name: Show logs on failure
      if: failure()
      run: docker compose -f dev/docker-compose.yml logs
    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-report
        path: tests/playwright-report/
        retention-days: 30
  lint-backend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
    - name: Install uv
      uses: astral-sh/setup-uv@v6
    - uses: taiki-e/install-action@just
    - name: Setup environment
      run: cp .env.example .env
    - name: Run backend lint
      run: just backend lint

  lint-frontend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
    - uses: taiki-e/install-action@just
    - uses: denoland/setup-deno@v2
      with:
        deno-version: v2.x
    - name: Install frontend dependencies
      run: cd frontend && deno install
    - name: Run frontend lint
      run: just frontend lint
